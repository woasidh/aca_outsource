[{"C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\index.js":"1","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\App.js":"2","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Navbar\\Navbar.js":"3","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\LandingPage\\LandingPage.js":"4","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\LandingPage\\sections\\Thumbnail.js":"5","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\LandingPage\\sections\\Content\\Content.js":"6","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Footer\\Footer.js":"7","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\utils\\Table\\Table.js":"8","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\utils\\LeftNavbar\\LeftNavbar.js":"9","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\InfoPage\\InfoPage.js":"10","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\InfoPage\\sections\\CommunityPage\\CommunityPage.js":"11","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\InfoPage\\sections\\LecturePage\\Lecturepage.js":"12","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\InfoPage\\sections\\TeacherPage\\TeacherPage.js":"13","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Auth\\Auth.js":"14","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Auth\\SignupPage\\SignupPage.js":"15","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Auth\\LoginPage\\LoginPage.js":"16","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Auth\\SignupPage\\section\\stepConatiner\\stepContainer.js":"17","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Auth\\SignupPage\\section\\StepConatiner\\StepContainer.js":"18","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Auth\\SignupPage\\section\\AgreeContainer\\AgreeContainer.js":"19","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Auth\\SignupPage\\section\\SignupLink\\SignupLink.js":"20","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Auth\\SignupPage\\section\\InfoContainer\\InfoContainer.js":"21","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\InfoPage\\sections\\CommunityPage\\NoticePage\\NoticePage.js":"22","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\InfoPage\\sections\\CommunityPage\\UnivPage\\UnivPage.js":"23","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\InfoPage\\sections\\CommunityPage\\VideoPage\\VideoPage.js":"24","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\_reducers\\index.js":"25","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\_reducers\\user_reducer.js":"26","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\_actions\\types.js":"27","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\InfoPage\\sections\\CommunityPage\\NoticeContent\\NoticeContent.js":"28","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Admin\\Admin.js":"29","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Admin\\Upload\\Upload.js":"30","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Admin\\Upload\\NoticeUpload\\NoticeUpload.js":"31","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Admin\\Modify\\Modify.js":"32","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Admin\\Modify\\NoticeModify\\index.js":"33","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\InfoPage\\sections\\CommunityPage\\VideoContent\\VideoContent.js":"34","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Admin\\Upload\\VideoUpload\\VideoUpload.js":"35","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Admin\\Modify\\VideoModify\\index.js":"36","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Admin\\Upload\\UnivInfoUpload\\index.js":"37","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\InfoPage\\sections\\CommunityPage\\UnivContent\\UnivContent.js":"38","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Admin\\Modify\\UnivInfoModify\\index.js":"39","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Admin\\Upload\\ScheduleUpload\\index.js":"40","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\InfoPage\\sections\\LecturePage\\ScheduleContent\\index.js":"41","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Admin\\Modify\\ScheduleModify\\index.js":"42"},{"size":661,"mtime":1613360487927,"results":"43","hashOfConfig":"44"},{"size":895,"mtime":1613772242459,"results":"45","hashOfConfig":"44"},{"size":5073,"mtime":1613840341548,"results":"46","hashOfConfig":"44"},{"size":340,"mtime":1613396446816,"results":"47","hashOfConfig":"44"},{"size":1976,"mtime":1611051806014,"results":"48","hashOfConfig":"44"},{"size":4751,"mtime":1611046895347,"results":"49","hashOfConfig":"44"},{"size":696,"mtime":1611497252122,"results":"50","hashOfConfig":"44"},{"size":4390,"mtime":1613067296998,"results":"51","hashOfConfig":"44"},{"size":3103,"mtime":1613639180907,"results":"52","hashOfConfig":"44"},{"size":1431,"mtime":1613836854030,"results":"53","hashOfConfig":"44"},{"size":1751,"mtime":1613827078791,"results":"54","hashOfConfig":"44"},{"size":10229,"mtime":1613835802062,"results":"55","hashOfConfig":"44"},{"size":8357,"mtime":1613639061920,"results":"56","hashOfConfig":"44"},{"size":578,"mtime":1613636579784,"results":"57","hashOfConfig":"44"},{"size":1567,"mtime":1613063935579,"results":"58","hashOfConfig":"44"},{"size":3036,"mtime":1613401668353,"results":"59","hashOfConfig":"44"},{"size":1940,"mtime":1611655229285,"results":"60","hashOfConfig":"44"},{"size":1931,"mtime":1613063988428,"results":"61","hashOfConfig":"44"},{"size":1732,"mtime":1611668189157,"results":"62","hashOfConfig":"44"},{"size":3000,"mtime":1613063958611,"results":"63","hashOfConfig":"44"},{"size":2072,"mtime":1611919704579,"results":"64","hashOfConfig":"44"},{"size":8642,"mtime":1613826481157,"results":"65","hashOfConfig":"44"},{"size":8606,"mtime":1613826813555,"results":"66","hashOfConfig":"44"},{"size":8636,"mtime":1613825072963,"results":"67","hashOfConfig":"44"},{"size":163,"mtime":1613360401225,"results":"68","hashOfConfig":"44"},{"size":280,"mtime":1613396450830,"results":"69","hashOfConfig":"44"},{"size":39,"mtime":1613360403111,"results":"70","hashOfConfig":"44"},{"size":4515,"mtime":1613826119878,"results":"71","hashOfConfig":"44"},{"size":566,"mtime":1613772347144,"results":"72","hashOfConfig":"44"},{"size":1168,"mtime":1613831808174,"results":"73","hashOfConfig":"44"},{"size":6505,"mtime":1613778123478,"results":"74","hashOfConfig":"44"},{"size":1154,"mtime":1613839160379,"results":"75","hashOfConfig":"44"},{"size":9132,"mtime":1613828613153,"results":"76","hashOfConfig":"44"},{"size":4510,"mtime":1613825173624,"results":"77","hashOfConfig":"44"},{"size":6474,"mtime":1613825457960,"results":"78","hashOfConfig":"44"},{"size":9128,"mtime":1613835819872,"results":"79","hashOfConfig":"44"},{"size":6483,"mtime":1613826941310,"results":"80","hashOfConfig":"44"},{"size":4493,"mtime":1613827087916,"results":"81","hashOfConfig":"44"},{"size":8587,"mtime":1613828583895,"results":"82","hashOfConfig":"44"},{"size":6634,"mtime":1613839739493,"results":"83","hashOfConfig":"44"},{"size":4681,"mtime":1613838264775,"results":"84","hashOfConfig":"44"},{"size":8252,"mtime":1613839538741,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"ar9igt",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"88"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\index.js",[],["184","185"],"C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\App.js",[],"C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Navbar\\Navbar.js",["186"],"C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\LandingPage\\LandingPage.js",[],"C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\LandingPage\\sections\\Thumbnail.js",[],"C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\LandingPage\\sections\\Content\\Content.js",[],"C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\utils\\Table\\Table.js",[],"C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\utils\\LeftNavbar\\LeftNavbar.js",[],"C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\InfoPage\\InfoPage.js",["187"],"import React, { useEffect } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\";\r\nimport CommunityPage from './sections/CommunityPage/CommunityPage'\r\nimport LecturePage from './sections/LecturePage/Lecturepage'\r\nimport TeacherPage from './sections/TeacherPage/TeacherPage'\r\nimport LeftNavbar from '../utils/LeftNavbar/LeftNavbar'\r\nimport ScheduleContent from './sections/LecturePage/ScheduleContent/index'\r\nimport './InfoPage.css'\r\n\r\nfunction InfoPage() {\r\n\r\n    const baseUrl = '/info';\r\n\r\n    return (\r\n        <div className=\"infoPage\">\r\n            <LeftNavbar />\r\n            <Router>\r\n                <div className=\"infoContainer\">\r\n                    <Switch>\r\n                        <Route path={`${baseUrl}/schedule/content`}>\r\n                            <ScheduleContent/>\r\n                        </Route>\r\n                        <Route path={`${baseUrl}/schedule`}>\r\n                            <LecturePage />\r\n                        </Route>\r\n                        <Route path={`${baseUrl}/teacher`}>\r\n                            <TeacherPage />\r\n                        </Route>\r\n                        <Route path={`${baseUrl}/community`}>\r\n                            <CommunityPage />\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoPage\r\n","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\InfoPage\\sections\\CommunityPage\\CommunityPage.js",[],"C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\InfoPage\\sections\\LecturePage\\Lecturepage.js",["188"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport './Lecturepage.css'\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookie = new Cookies();\r\n\r\nfunction LecturePage() {\r\n\r\n    const [isAdmin, setisAdmin] = useState(false);\r\n    const [currentPage, setcurrentPage] = useState(1);\r\n    const [contentCount, setcontentCount] = useState(0);\r\n    const [contents, setcontents] = useState([]);\r\n    const [Pcontents, setPcontents] = useState([]);\r\n    const [searchCount, setsearchCount] = useState(10);\r\n    const [nonPriorityCount, setnonPriorityCount] = useState(0)\r\n    const [grade, setgrade] = useState(1)\r\n\r\n    function axiosFunc(gradeNum) {\r\n        console.log(gradeNum);\r\n        axios.get(`http://localhost:3001/schedule/contents/${gradeNum}`).then(response => {\r\n            if (response.data.success === true) {\r\n                /* console.log(response.data); */\r\n                console.log('axios comm success');\r\n                const total = response.data.result.length + response.data.resultP.length;\r\n                setcontentCount(total);\r\n                setsearchCount(10 - response.data.resultP.length);\r\n                setnonPriorityCount(response.data.result.length)\r\n                setcontents(response.data.result.reverse());\r\n                setPcontents(response.data.resultP.reverse());\r\n            } else {\r\n                console.log('axios comm fail!');\r\n            }\r\n        })\r\n        return;\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        console.log('sex')\r\n\r\n        axios.post('http://localhost:3001/auth/isAdmin', { token: cookie.get('kth_tk') }).then(response => {\r\n            if (response.data.success === true) {\r\n                if (response.data.isAdmin === true) {\r\n                    setisAdmin(true);\r\n                } else {\r\n                    setisAdmin(false);\r\n                }\r\n            } else {\r\n                window.location.href = '/'\r\n                alert('에러 발생')\r\n            }\r\n        })\r\n\r\n        switch (grade) {\r\n            case 1:\r\n                axiosFunc(1)\r\n                break;\r\n            case 2:\r\n                axiosFunc(2)\r\n                break;\r\n            case 3:\r\n                axiosFunc(3)\r\n                break;\r\n            case 4:\r\n                axiosFunc(4)\r\n                break;\r\n            case 5:\r\n                axiosFunc(5)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }, [grade])\r\n\r\n    function genTableContent() {\r\n        let resultCode = [];\r\n        Pcontents.forEach((content, index) => {\r\n            content && resultCode.push(\r\n                <tr>\r\n                    <td>공지</td>\r\n                    <td style ={{position : 'relative'}}>\r\n                        <a href={'/info/schedule/content?id=' + content.scheduleId}>\r\n                            {content.title}\r\n                        </a>\r\n                        {isAdmin && <><a href = {'/admin/modify/schedule?id='+content.scheduleId} className = \"changeBtn\" style = {{position : 'absolute', right : '0'}}>\r\n                            수정\r\n                        </a>\r\n                        <button onClick = {()=>{\r\n                            axios.delete(`http://localhost:3001/schedule/content/${content.scheduleId}`).then(res=>{\r\n                                if(res.data.success === false){\r\n                                    alert('오률발생');\r\n                                }else{\r\n                                    alert('삭제가 완료되었습니다.');\r\n                                    window.location.href = '/info/schedule';\r\n                                }\r\n                            })\r\n                        }} className = \"_deleteBtn\" style = {{position : 'absolute', right : '55px'}}>\r\n                            삭제\r\n                        </button></>}\r\n                    </td>\r\n                    <td>{content.author}</td>\r\n                    <td>{content.genDate.split('T')[0]}</td>\r\n                    <td>{content.counter}</td>\r\n                </tr>\r\n            );\r\n        })\r\n        let j = 0;\r\n        for (let i = searchCount * (currentPage - 1); i < searchCount * (currentPage); i++) {\r\n            contents[i] && resultCode.push(\r\n                <tr>\r\n                    <td>{nonPriorityCount - ((currentPage - 1) * searchCount) - j}</td>\r\n                    <td style ={{position : 'relative'}}>\r\n                        <a href={'/info/schedule/content?id=' + contents[i].scheduleId}>\r\n                            {contents[i].title}\r\n                        </a>\r\n                        {isAdmin && <><a href = {'/admin/modify/schedule?id='+contents[i].scheduleId} className = \"changeBtn\" style = {{position : 'absolute', right : '0'}}>\r\n                            수정\r\n                        </a>\r\n                        <button onClick = {()=>{\r\n                            axios.delete(`http://localhost:3001/schedule/content/${grade}/${contents[i].scheduleId}`).then(res=>{\r\n                                if(res.data.success === false){\r\n                                    alert('오률발생');\r\n                                }else{\r\n                                    alert('삭제가 완료되었습니다.');\r\n                                    window.location.href = '/info/schedule';\r\n                                }\r\n                            })\r\n                        }} className = \"_deleteBtn\" style = {{position : 'absolute', right : '55px'}}>\r\n                            삭제\r\n                        </button></>}\r\n                    </td>\r\n                    <td>{contents[i].author}</td>\r\n                    <td>{contents[i].genDate.split('T')[0]}</td>\r\n                    <td>{contents[i].counter}</td>\r\n                </tr>\r\n            );\r\n            j++;\r\n        }\r\n        return (\r\n            resultCode\r\n        );\r\n    }\r\n\r\n    function genPageSelector() {\r\n        const total = parseInt((nonPriorityCount - 1) / searchCount);\r\n        let resultCode = [];\r\n        for (let i = 1; i < total + 2; i++) {\r\n            if (i === currentPage) {\r\n                resultCode.push(<button onClick={() => {\r\n                    setcurrentPage(i);\r\n                }}><li key={i} className=\"pageSelector__number active\">{i}</li></button>);\r\n            } else {\r\n                resultCode.push(<button onClick={() => {\r\n                    setcurrentPage(i);\r\n                }}><li key={i} className=\"pageSelector__number\">{i}</li></button>);\r\n            }\r\n        }\r\n        return (\r\n            resultCode\r\n        );\r\n    }\r\n\r\n    function onGradeClick(e){\r\n        setgrade(parseInt(e.target.id));\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"lecture__title\">\r\n            강의시간표\r\n        </div>\r\n            <ul className=\"lecture__grades\">\r\n                <button onClick = {onGradeClick}><li key=\"1\" className={\"lecture_grade \" + (grade === 1 ? \"active\" : \"\")}id=\"1\">고1</li></button>\r\n                <button onClick = {onGradeClick}><li key=\"2\" className={\"lecture_grade \" + (grade === 2 ? \"active\" : \"\")}id=\"2\">고2</li></button>\r\n                <button onClick = {onGradeClick}><li key=\"3\" className={\"lecture_grade \" + (grade === 3 ? \"active\" : \"\")}id=\"3\">고3</li></button>\r\n                <button onClick = {onGradeClick}><li key=\"4\" className={\"lecture_grade \" + (grade === 4 ? \"active\" : \"\")}id=\"4\">중3</li></button>\r\n                <button onClick = {onGradeClick}><li key=\"4\" className={\"lecture_grade \" + (grade === 5 ? \"active\" : \"\")}id=\"5\">특강</li></button>\r\n            </ul>\r\n            <div className=\"table\">\r\n                <div className=\"table__intro\">\r\n                    <div className=\"table__counter\">\r\n                    <p style={{ display: 'inline-block' }} className=\"table__counter\">\r\n                            Total\r\n                        <span> {nonPriorityCount}건</span>\r\n                        ,\r\n                        <span> {currentPage} </span>\r\n                        page\r\n                        </p>\r\n                        {isAdmin && <a className=\"notice__uploadBtn\" href={'/admin/upload/schedule?grade='+grade}>업로드</a>}\r\n                    </div>\r\n                    <div className=\"table__intro__search\">\r\n                        <input type=\"text\" placeholder=\"검색어를 입력해 주세요\" id=\"search\" name=\"name\" />\r\n                        <button><i className=\"fas fa-search\"></i></button>\r\n                    </div>\r\n                </div>\r\n                <table>\r\n                    <colgroup>\r\n                        <col style={{ width: \"10%\" }} />\r\n                        <col style={{ width: \"60%\" }} />\r\n                        <col style={{ width: \"10%\" }} />\r\n                        <col style={{ width: \"10%\" }} />\r\n                        <col style={{ width: \"10%\" }} />\r\n                    </colgroup>\r\n                    <thead>\r\n                        <tr>\r\n                            <th colSpan=\"1\">공지</th>\r\n                            <th colSpan=\"1\">제목</th>\r\n                            <th colSpan=\"1\">글쓴이</th>\r\n                            <th colSpan=\"1\">날짜</th>\r\n                            <th colSpan=\"1\">조회</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {genTableContent()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <ul className=\"pageSelector\">\r\n                <button><div className=\"pageDirector\"><i className=\"fas fa-angle-double-left\"></i></div></button>\r\n                {currentPage !== 1 ? <button><div className=\"pageDirector\"><i className=\"fas fa-angle-left\"></i></div></button> : <></>}\r\n                {genPageSelector()}\r\n                {currentPage === parseInt((nonPriorityCount - 1) / searchCount) - 1 ? <button><div className=\"pageDirector\"><i className=\"fas fa-angle-right\"></i></div></button> : <></>}\r\n                <button><div className=\"pageDirector\"><i className=\"fas fa-angle-double-right\"></i></div></button>\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LecturePage\r\n","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\InfoPage\\sections\\TeacherPage\\TeacherPage.js",[],"C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Auth\\Auth.js",[],"C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Auth\\SignupPage\\SignupPage.js",[],"C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Auth\\LoginPage\\LoginPage.js",["189"],"import React, { useEffect } from 'react'\r\nimport './LoginPage.css'\r\nimport axios from 'axios'\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookie = new Cookies();\r\n\r\nfunction LoginPage(props) {\r\n\r\n    function loginBtn(){\r\n        \r\n        const idElm = document.querySelector('input#id');\r\n        const pwdElm = document.querySelector('input#pwd');\r\n\r\n        const payload = {\r\n            id : idElm.value,\r\n            pwd : pwdElm.value\r\n        }\r\n\r\n        axios.post('http://localhost:3001/auth/login', payload).then(response=>{\r\n            const success = response.data.success;\r\n            const msg = response.data.msg;\r\n\r\n            if(success !== true){\r\n                if(msg === 'noId'){\r\n                    alert('일치하는 ID가 존재하지 않습니다');\r\n                }else if(msg === 'pwdWrong'){\r\n                    alert('비밀번호가 일치하지 않습니다');\r\n                }\r\n            }else{\r\n                console.log('login success');\r\n                cookie.set('token', response.data.token, {expires: new Date(Date.now()+60*60*1000)});\r\n                window.location.href = '/';\r\n            }\r\n        })\r\n\r\n        /* axios.get('ec2-13-125-234-233.ap-northeast-2.compute.amazonaws.com:3000').then(response=>{\r\n            console.log(response);\r\n        }) */\r\n    }\r\n\r\n    return (\r\n        <div className=\"loginPage\">\r\n            <div className=\"loginBox\">\r\n                <div className=\"login__title\">\r\n                    로그인\r\n                </div>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"아이디\"\r\n                    id=\"id\"\r\n                    name=\"id\"   \r\n                    autoComplete=\"off\"\r\n                    />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"비밀번호\"\r\n                    id=\"pwd\"\r\n                    name=\"pwd\"\r\n                    autoComplete=\"off\" />\r\n                <div className=\"login__subMenu\">\r\n                    <div className=\"login__help\">\r\n                        <a href = \"/auth/findId\"><span>아이디 찾기</span></a>\r\n                        <a href = \"/auth/findPwd\"><span>비밀번호 찾기</span></a>\r\n                        <a href = \"/auth/signup/terms\"><span>회원가입</span></a>\r\n                    </div>\r\n                </div>\r\n                <button onClick = {loginBtn} className=\"loginBtn\">로그인</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage\r\n","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Auth\\SignupPage\\section\\stepConatiner\\stepContainer.js",[],"C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Auth\\SignupPage\\section\\StepConatiner\\StepContainer.js",[],"C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Auth\\SignupPage\\section\\AgreeContainer\\AgreeContainer.js",[],"C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Auth\\SignupPage\\section\\SignupLink\\SignupLink.js",[],"C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Auth\\SignupPage\\section\\InfoContainer\\InfoContainer.js",[],"C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\InfoPage\\sections\\CommunityPage\\NoticePage\\NoticePage.js",["190","191","192"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport '../../../../utils/Table/Table.css'\r\nimport Cookies from 'universal-cookie';\r\nimport './NoticePage.css'\r\n\r\nconst cookie = new Cookies();\r\n\r\nfunction NoticePage() {\r\n\r\n    const [isAdmin, setisAdmin] = useState(false);\r\n    const [currentPage, setcurrentPage] = useState(1);\r\n    const [contentCount, setcontentCount] = useState(0);\r\n    const [contents, setcontents] = useState([]);\r\n    const [Pcontents, setPcontents] = useState([]);\r\n    const [searchCount, setsearchCount] = useState(10);\r\n    const [nonPriorityCount, setnonPriorityCount] = useState(0);\r\n    const [refresh, setrefresh] = useState(0);\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        axios.get('http://localhost:3001/notice/contents').then(response => {\r\n            if (response.data.success === true) {\r\n                console.log('axios comm success');\r\n                const total = response.data.result.length + response.data.resultP.length;\r\n                setcontentCount(total);\r\n                setsearchCount(10 - response.data.resultP.length);\r\n                setnonPriorityCount(response.data.result.length)\r\n                setcontents(response.data.result.reverse());\r\n                setPcontents(response.data.resultP.reverse());\r\n            } else {\r\n                console.log('axios comm fail!');\r\n            }\r\n        })\r\n\r\n\r\n        axios.post('http://localhost:3001/auth/isAdmin', { token: cookie.get('kth_tk') }).then(response => {\r\n            if (response.data.success === true) {\r\n                if (response.data.isAdmin === true) {\r\n                    setisAdmin(true);\r\n                } else {\r\n                    setisAdmin(false);\r\n                }\r\n            } else {\r\n                window.location.href = '/'\r\n                alert('에러 발생')\r\n            }\r\n        })\r\n\r\n    }, [])\r\n\r\n    function genTableContent() {\r\n        let resultCode = [];\r\n        Pcontents.forEach((content, index) => {\r\n            content && resultCode.push(\r\n                <tr>\r\n                    <td>공지</td>\r\n                    <td style ={{position : 'relative'}}>\r\n                        <a href={'/info/community/notice/content?id=' + content.noticeId}>\r\n                            {content.title}\r\n                        </a>\r\n                        {isAdmin && <><a href = {'/admin/modify/notice?id='+content.noticeId} className = \"changeBtn\" style = {{position : 'absolute', right : '0'}}>\r\n                            수정\r\n                        </a>\r\n                        <button onClick = {()=>{\r\n                            axios.delete(`http://localhost:3001/notice/content/${content.noticeId}`).then(res=>{\r\n                                if(res.data.success === false){\r\n                                    alert('오률발생');\r\n                                }else{\r\n                                    alert('삭제가 완료되었습니다.');\r\n                                    window.location.href = '/info/community/notice';\r\n                                }\r\n                            })\r\n                        }} className = \"_deleteBtn\" style = {{position : 'absolute', right : '55px'}}>\r\n                            삭제\r\n                        </button></>}\r\n                    </td>\r\n                    <td>{content.author}</td>\r\n                    <td>{content.genDate.split('T')[0]}</td>\r\n                    <td>{content.counter}</td>\r\n                </tr>\r\n            );\r\n        })\r\n        let j = 0;\r\n        for (let i = searchCount * (currentPage - 1); i < searchCount * (currentPage); i++) {\r\n            contents[i] && resultCode.push(\r\n                <tr>\r\n                    <td>{nonPriorityCount - ((currentPage - 1) * searchCount) - j}</td>\r\n                    <td style ={{position : 'relative'}}>\r\n                        <a href={'/info/community/notice/content?id=' + contents[i].noticeId}>\r\n                            {contents[i].title}\r\n                        </a>\r\n                        {isAdmin && <><a href = {'/admin/modify/notice?id='+contents[i].noticeId} className = \"changeBtn\" style = {{position : 'absolute', right : '0'}}>\r\n                            수정\r\n                        </a>\r\n                        <button onClick = {()=>{\r\n                            axios.delete(`http://localhost:3001/notice/content/${contents[i].noticeId}`).then(res=>{\r\n                                if(res.data.success === false){\r\n                                    alert('오률발생');\r\n                                }else{\r\n                                    alert('삭제가 완료되었습니다.');\r\n                                    window.location.href = '/info/community/notice';\r\n                                }\r\n                            })\r\n                        }} className = \"_deleteBtn\" style = {{position : 'absolute', right : '55px'}}>\r\n                            삭제\r\n                        </button></>}\r\n                    </td>\r\n                    <td>{contents[i].author}</td>\r\n                    <td>{contents[i].genDate.split('T')[0]}</td>\r\n                    <td>{contents[i].counter}</td>\r\n                </tr>\r\n            );\r\n            j++;\r\n        }\r\n        return (\r\n            resultCode\r\n        );\r\n    }\r\n\r\n    function genPageSelector() {\r\n        const total = parseInt((nonPriorityCount - 1) / searchCount);\r\n        let resultCode = [];\r\n        for (let i = 1; i < total + 2; i++) {\r\n            if (i === currentPage) {\r\n                resultCode.push(<button onClick={() => {\r\n                    setcurrentPage(i);\r\n                }}><li key={i} className=\"pageSelector__number active\">{i}</li></button>);\r\n            } else {\r\n                resultCode.push(<button onClick={() => {\r\n                    setcurrentPage(i);\r\n                }}><li key={i} className=\"pageSelector__number\">{i}</li></button>);\r\n            }\r\n        }\r\n        return (\r\n            resultCode\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"table\">\r\n                <div className=\"table__intro\">\r\n                    <div className=\"table__counter\">\r\n                        <p style={{ display: 'inline-block' }} className=\"table__counter\">\r\n                            Total\r\n                        <span> {nonPriorityCount}건</span>\r\n                        ,\r\n                        <span> {currentPage} </span>\r\n                        page\r\n                        </p>\r\n                        {isAdmin && <a className=\"notice__uploadBtn\" href=\"/admin/upload/notice\">업로드</a>}\r\n                    </div>\r\n                    <div className=\"table__intro__search\">\r\n                        <input type=\"text\" placeholder=\"검색어를 입력해 주세요\" id=\"search\" name=\"name\" />\r\n                        <button><i className=\"fas fa-search\"></i></button>\r\n                    </div>\r\n                </div>\r\n                <table>\r\n                    <colgroup>\r\n                        <col style={{ width: \"10%\" }} />\r\n                        <col style={{ width: \"60%\" }} />\r\n                        <col style={{ width: \"10%\" }} />\r\n                        <col style={{ width: \"10%\" }} />\r\n                        <col style={{ width: \"10%\" }} />\r\n                    </colgroup>\r\n                    <thead>\r\n                        <tr>\r\n                            <th colSpan=\"1\">공지</th>\r\n                            <th colSpan=\"1\">제목</th>\r\n                            <th colSpan=\"1\">글쓴이</th>\r\n                            <th colSpan=\"1\">날짜</th>\r\n                            <th colSpan=\"1\">조회</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {genTableContent()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <ul className=\"pageSelector\">\r\n                <button><div className=\"pageDirector\"><i className=\"fas fa-angle-double-left\"></i></div></button>\r\n                {currentPage !== 1 ? <button><div className=\"pageDirector\"><i className=\"fas fa-angle-left\"></i></div></button> : <></>}\r\n                {genPageSelector()}\r\n                {currentPage === parseInt((nonPriorityCount - 1) / searchCount) - 1 ? <button><div className=\"pageDirector\"><i className=\"fas fa-angle-right\"></i></div></button> : <></>}\r\n                <button><div className=\"pageDirector\"><i className=\"fas fa-angle-double-right\"></i></div></button>\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NoticePage\r\n","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\InfoPage\\sections\\CommunityPage\\UnivPage\\UnivPage.js",["193","194","195"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport '../../../../utils/Table/Table.css'\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookie = new Cookies();\r\n\r\nfunction UnivPage() {\r\n\r\n    const [isAdmin, setisAdmin] = useState(false);\r\n    const [currentPage, setcurrentPage] = useState(1);\r\n    const [contentCount, setcontentCount] = useState(0);\r\n    const [contents, setcontents] = useState([]);\r\n    const [Pcontents, setPcontents] = useState([]);\r\n    const [searchCount, setsearchCount] = useState(10);\r\n    const [nonPriorityCount, setnonPriorityCount] = useState(0)\r\n    const [refresh, setrefresh] = useState(0);\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        axios.get('http://localhost:3001/univInfo/contents').then(response => {\r\n            if (response.data.success === true) {\r\n                console.log(response.data);\r\n                const total = response.data.result.length + response.data.resultP.length;\r\n                setcontentCount(total);\r\n                setsearchCount(10-response.data.resultP.length);\r\n                setnonPriorityCount(response.data.result.length)\r\n                setcontents(response.data.result.reverse());\r\n                setPcontents(response.data.resultP.reverse());\r\n            } else {\r\n                console.log('axios comm fail!');\r\n            }\r\n        })\r\n\r\n        axios.post('http://localhost:3001/auth/isAdmin', { token: cookie.get('kth_tk') }).then(response => {\r\n            if (response.data.success === true) {\r\n                if (response.data.isAdmin === true) {\r\n                    setisAdmin(true);\r\n                } else {\r\n                    setisAdmin(false);\r\n                }\r\n            } else {\r\n                window.location.href = '/'\r\n                alert('에러 발생')\r\n            }\r\n        })\r\n\r\n    }, [])\r\n\r\n    function genTableContent() {\r\n        let resultCode = [];\r\n        Pcontents.forEach((content, index) => {\r\n            content && resultCode.push(\r\n                <tr>\r\n                    <td>공지</td>\r\n                    <td style ={{position : 'relative'}}>\r\n                        <a href={'/info/community/univInfo/content?id=' + content.univInfoId}>\r\n                            {content.title}\r\n                        </a>\r\n                        {isAdmin && <><a href = {'/admin/modify/univInfo?id='+content.univInfoId} className = \"changeBtn\" style = {{position : 'absolute', right : '0'}}>\r\n                            수정\r\n                        </a>\r\n                        <button onClick = {()=>{\r\n                            axios.delete(`http://localhost:3001/univInfo/content/${content.univInfoId}`).then(res=>{\r\n                                if(res.data.success === false){\r\n                                    alert('오률발생');\r\n                                }else{\r\n                                    alert('삭제가 완료되었습니다.');\r\n                                    window.location.href = '/info/community/univInfo';\r\n                                }\r\n                            })\r\n                        }} className = \"_deleteBtn\" style = {{position : 'absolute', right : '55px'}}>\r\n                            삭제\r\n                        </button></>}\r\n                    </td>\r\n                    <td>{content.author}</td>\r\n                    <td>{content.genDate.split('T')[0]}</td>\r\n                    <td>{content.counter}</td>\r\n                </tr>\r\n            );\r\n        })\r\n        let j = 0;\r\n        for (let i = searchCount * (currentPage - 1); i < searchCount * (currentPage); i++) {\r\n            contents[i] && resultCode.push(\r\n                <tr>\r\n                    <td>{nonPriorityCount - ((currentPage - 1) * searchCount) - j}</td>\r\n                    <td style ={{position : 'relative'}}>\r\n                        <a href={'/info/community/univInfo/content?id=' + contents[i].univInfoId}>\r\n                            {contents[i].title}\r\n                        </a>\r\n                        {isAdmin && <><a href = {'/admin/modify/univInfo?id='+contents[i].univInfoId} className = \"changeBtn\" style = {{position : 'absolute', right : '0'}}>\r\n                            수정\r\n                        </a>\r\n                        <button onClick = {()=>{\r\n                            axios.delete(`http://localhost:3001/univInfo/content/${contents[i].univInfoId}`).then(res=>{\r\n                                if(res.data.success === false){\r\n                                    alert('오률발생');\r\n                                }else{\r\n                                    alert('삭제가 완료되었습니다.');\r\n                                    window.location.href = '/info/community/univInfo';\r\n                                }\r\n                            })\r\n                        }} className = \"_deleteBtn\" style = {{position : 'absolute', right : '55px'}}>\r\n                            삭제\r\n                        </button></>}\r\n                    </td>\r\n                    <td>{contents[i].author}</td>\r\n                    <td>{contents[i].genDate.split('T')[0]}</td>\r\n                    <td>{contents[i].counter}</td>\r\n                </tr>\r\n            );\r\n            j++;\r\n        }\r\n        return (\r\n            resultCode\r\n        );\r\n    }\r\n\r\n    function genPageSelector() {\r\n        const total = parseInt((nonPriorityCount-1)/searchCount);\r\n        let resultCode = [];\r\n        for(let i =1;i<total+2;i++){\r\n            if(i===currentPage){\r\n                resultCode.push(<button onClick = {()=>{\r\n                    setcurrentPage(i);\r\n                }}><li key = {i} className=\"pageSelector__number active\">{i}</li></button>);\r\n            }else{\r\n                resultCode.push(<button onClick = {()=>{\r\n                    setcurrentPage(i);\r\n                }}><li key = {i} className=\"pageSelector__number\">{i}</li></button>);\r\n            }\r\n        }\r\n        return (\r\n            resultCode\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"table\">\r\n                <div className=\"table__intro\">\r\n                    <div className=\"table__counter\">\r\n                    <p style={{ display: 'inline-block' }} className=\"table__counter\">\r\n                            Total\r\n                        <span> {nonPriorityCount}건</span>\r\n                        ,\r\n                        <span> {currentPage} </span>\r\n                        page\r\n                        </p>\r\n                        {isAdmin && <a className=\"notice__uploadBtn\" href=\"/admin/upload/univInfo\">업로드</a>}\r\n                    </div>\r\n                    <div className=\"table__intro__search\">\r\n                        <input type=\"text\" placeholder=\"검색어를 입력해 주세요\" id=\"search\" name=\"name\" />\r\n                        <button><i className=\"fas fa-search\"></i></button>\r\n                    </div>\r\n                </div>\r\n                <table>\r\n                    <colgroup>\r\n                        <col style={{ width: \"10%\" }} />\r\n                        <col style={{ width: \"60%\" }} />\r\n                        <col style={{ width: \"10%\" }} />\r\n                        <col style={{ width: \"10%\" }} />\r\n                        <col style={{ width: \"10%\" }} />\r\n                    </colgroup>\r\n                    <thead>\r\n                        <tr>\r\n                            <th colSpan=\"1\">공지</th>\r\n                            <th colSpan=\"1\">제목</th>\r\n                            <th colSpan=\"1\">글쓴이</th>\r\n                            <th colSpan=\"1\">날짜</th>\r\n                            <th colSpan=\"1\">조회</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {genTableContent()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <ul className=\"pageSelector\">\r\n                <button><div className=\"pageDirector\"><i className=\"fas fa-angle-double-left\"></i></div></button>\r\n                {currentPage !== 1 ? <button><div className=\"pageDirector\"><i className=\"fas fa-angle-left\"></i></div></button> : <></>}\r\n                {genPageSelector()}\r\n                {currentPage === parseInt((nonPriorityCount-1)/searchCount)-1 ? <button><div className=\"pageDirector\"><i className=\"fas fa-angle-right\"></i></div></button> : <></>}\r\n                <button><div className=\"pageDirector\"><i className=\"fas fa-angle-double-right\"></i></div></button>\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UnivPage\r\n","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\InfoPage\\sections\\CommunityPage\\VideoPage\\VideoPage.js",["196","197","198"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport '../../../../utils/Table/Table.css'\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookie = new Cookies();\r\n\r\nfunction VideoPage() {\r\n\r\n    const [isAdmin, setisAdmin] = useState(false);\r\n    const [currentPage, setcurrentPage] = useState(1);\r\n    const [contentCount, setcontentCount] = useState(0);\r\n    const [contents, setcontents] = useState([]);\r\n    const [Pcontents, setPcontents] = useState([]);\r\n    const [searchCount, setsearchCount] = useState(10);\r\n    const [nonPriorityCount, setnonPriorityCount] = useState(0)\r\n    const [refresh, setrefresh] = useState(0);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3001/video/contents').then(response => {\r\n            if (response.data.success === true) {\r\n                console.log(response.data[0]);\r\n                const total = response.data.result.length + response.data.resultP.length;\r\n                setcontentCount(total);\r\n                setsearchCount(10 - response.data.resultP.length);\r\n                setnonPriorityCount(response.data.result.length)\r\n                setcontents(response.data.result.reverse());\r\n                setPcontents(response.data.resultP.reverse());\r\n            } else {\r\n                console.log('axios comm fail!');\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    axios.post('http://localhost:3001/auth/isAdmin', { token: cookie.get('kth_tk') }).then(response => {\r\n        if (response.data.success === true) {\r\n            if (response.data.isAdmin === true) {\r\n                setisAdmin(true);\r\n            } else {\r\n                setisAdmin(false);\r\n            }\r\n        } else {\r\n            window.location.href = '/'\r\n            alert('에러 발생')\r\n        }\r\n    })\r\n\r\n    function genTableContent() {\r\n        let resultCode = [];\r\n        Pcontents.forEach((content, index) => {\r\n            content && resultCode.push(\r\n                <tr>\r\n                    <td>공지</td>\r\n                    <td style={{ position: 'relative' }}>\r\n                        <a href={'/info/community/video/content?id=' + content.videoId}>\r\n                            {content.title}\r\n                        </a>\r\n                        {isAdmin && <><a href={'/admin/modify/video?id=' + content.videoId} className=\"changeBtn\" style={{ position: 'absolute', right: '0' }}>\r\n                            수정\r\n                            </a>\r\n                            <button onClick={() => {\r\n                                axios.delete(`http://localhost:3001/video/content/${content.videoId}`).then(res => {\r\n                                    if (res.data.success === false) {\r\n                                        alert('오률발생');\r\n                                    } else {\r\n                                        alert('삭제가 완료되었습니다.');\r\n                                        window.location.href = '/info/community/video';\r\n                                    }\r\n                                })\r\n                            }} className=\"_deleteBtn\" style={{ position: 'absolute', right: '55px' }}>\r\n                                삭제\r\n                            </button></>}\r\n                    </td>\r\n                    <td>{content.author}</td>\r\n                    <td>{content.genDate.split('T')[0]}</td>\r\n                    <td>{content.counter}</td>\r\n                </tr>\r\n            );\r\n        })\r\n        let j = 0;\r\n        for (let i = searchCount * (currentPage - 1); i < searchCount * (currentPage); i++) {\r\n            contents[i] && resultCode.push(\r\n                <tr>\r\n                    <td>{nonPriorityCount - ((currentPage - 1) * searchCount) - j}</td>\r\n                    <td style={{ position: 'relative' }}>\r\n                        <a href={'/info/community/video/content?id=' + contents[i].videoId}>\r\n                            {contents[i].title}\r\n                        </a>\r\n                        {isAdmin && <><a href={'/admin/modify/video?id=' + contents[i].videoId} className=\"changeBtn\" style={{ position: 'absolute', right: '0' }}>\r\n                            수정\r\n                            </a>\r\n                            <button onClick={() => {\r\n                                axios.delete(`http://localhost:3001/video/content/${contents[i].videoId}`).then(res => {\r\n                                    if (res.data.success === false) {\r\n                                        alert('오률발생');\r\n                                    } else {\r\n                                        alert('삭제가 완료되었습니다.');\r\n                                        window.location.href = '/info/community/video';\r\n                                    }\r\n                                })\r\n                            }} className=\"_deleteBtn\" style={{ position: 'absolute', right: '55px' }}>\r\n                                삭제\r\n                            </button></>}\r\n                    </td>\r\n                    <td>{contents[i].author}</td>\r\n                    <td>{contents[i].genDate.split('T')[0]}</td>\r\n                    <td>{contents[i].counter}</td>\r\n                </tr>\r\n            );\r\n            j++;\r\n        }\r\n        return (\r\n            resultCode\r\n        );\r\n    }\r\n\r\n    function genPageSelector() {\r\n        const total = parseInt((nonPriorityCount - 1) / searchCount);\r\n        let resultCode = [];\r\n        for (let i = 1; i < total + 2; i++) {\r\n            if (i === currentPage) {\r\n                resultCode.push(<button onClick={() => {\r\n                    setcurrentPage(i);\r\n                }}><li key={i} className=\"pageSelector__number active\">{i}</li></button>);\r\n            } else {\r\n                resultCode.push(<button onClick={() => {\r\n                    setcurrentPage(i);\r\n                }}><li key={i} className=\"pageSelector__number\">{i}</li></button>);\r\n            }\r\n        }\r\n        return (\r\n            resultCode\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"table\">\r\n                <div className=\"table__intro\">\r\n                    <div className=\"table__counter\">\r\n                        <p style={{ display: 'inline-block' }} className=\"table__counter\">\r\n                            Total\r\n                        <span> {nonPriorityCount}건</span>\r\n                        ,\r\n                        <span> {currentPage} </span>\r\n                        page\r\n                        </p>\r\n                        {isAdmin && <a className=\"notice__uploadBtn\" href=\"/admin/upload/video\">업로드</a>}\r\n                    </div>\r\n                    <div className=\"table__intro__search\">\r\n                        <input type=\"text\" placeholder=\"검색어를 입력해 주세요\" id=\"search\" name=\"name\" />\r\n                        <button><i className=\"fas fa-search\"></i></button>\r\n                    </div>\r\n                </div>\r\n                <table>\r\n                    <colgroup>\r\n                        <col style={{ width: \"10%\" }} />\r\n                        <col style={{ width: \"60%\" }} />\r\n                        <col style={{ width: \"10%\" }} />\r\n                        <col style={{ width: \"10%\" }} />\r\n                        <col style={{ width: \"10%\" }} />\r\n                    </colgroup>\r\n                    <thead>\r\n                        <tr>\r\n                            <th colSpan=\"1\">공지</th>\r\n                            <th colSpan=\"1\">제목</th>\r\n                            <th colSpan=\"1\">글쓴이</th>\r\n                            <th colSpan=\"1\">날짜</th>\r\n                            <th colSpan=\"1\">조회</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {genTableContent()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <ul className=\"pageSelector\">\r\n                <button><div className=\"pageDirector\"><i className=\"fas fa-angle-double-left\"></i></div></button>\r\n                {currentPage !== 1 ? <button><div className=\"pageDirector\"><i className=\"fas fa-angle-left\"></i></div></button> : <></>}\r\n                {genPageSelector()}\r\n                {currentPage === parseInt((nonPriorityCount - 1) / searchCount) - 1 ? <button><div className=\"pageDirector\"><i className=\"fas fa-angle-right\"></i></div></button> : <></>}\r\n                <button><div className=\"pageDirector\"><i className=\"fas fa-angle-double-right\"></i></div></button>\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VideoPage\r\n","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\_reducers\\index.js",[],"C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\_reducers\\user_reducer.js",["199"],"import {\r\n    LOGIN_USER\r\n} from '../_actions/types';\r\n\r\nexport default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return { ...state, loginSucces: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\_actions\\types.js",[],"C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\InfoPage\\sections\\CommunityPage\\NoticeContent\\NoticeContent.js",[],"C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Admin\\Admin.js",[],"C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Admin\\Upload\\Upload.js",[],"C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Admin\\Upload\\NoticeUpload\\NoticeUpload.js",["200","201","202","203","204"],"import React, { useState } from 'react'\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport styled from 'styled-components';\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport Cookies from 'universal-cookie'\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport Files from 'react-files'\r\nimport axios from 'axios'\r\nimport './NoticeUplad.css'\r\nimport Checkbox from 'antd/lib/checkbox/Checkbox';\r\nvar ReactDOMServer = require('react-dom/server');\r\nvar HtmlToReactParser = require('html-to-react').Parser;\r\n\r\nconst cookie = new Cookies();\r\n\r\nconst MyBlock = styled.div`\r\n    .wrapper-class{\r\n        margin: 0 auto;\r\n    }\r\n  .editor {\r\n    height: 300px !important;\r\n    border: 1px solid #f1f1f1 !important;\r\n    padding: 5px !important;\r\n    border-radius: 2px !important;\r\n  }\r\n`;\r\n\r\n\r\nfunction NoticeUpload() {\r\n\r\n    const url = 'http://localhost:3001/';\r\n\r\n    const [contentLength, setcontentLength] = useState(0);\r\n    const [isChecked, setisChecked] = useState(false);\r\n    const [counter, setcounter] = useState(0);\r\n    const [Images, setImages] = useState([]);\r\n    const [editorState, setEditorState] = useState(EditorState.createEmpty());\r\n\r\n\r\n    const onEditorStateChange = (editorState) => {\r\n        setEditorState(editorState);\r\n        console.log(draftToHtml(convertToRaw(editorState.getCurrentContent())));\r\n        setcontentLength(draftToHtml(convertToRaw(editorState.getCurrentContent())).length);\r\n    };\r\n\r\n    function onImgChange(e) {\r\n        const image = e[e.length - 1]\r\n        console.log(image);\r\n        const fd = new FormData();\r\n        fd.append('image', image);\r\n        axios.post('http://localhost:3001/image/upload', fd).then(res => {\r\n            if (res.data.success === false) {\r\n                alert('업로드 실패')\r\n            } else {\r\n                console.log('sex', res.data.filepath);\r\n                Images.push(res.data.filepath);\r\n                setcounter(counter + 1);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: '900px', margin: 'auto' }}>\r\n            <div className=\"upload__title\">\r\n                <span>제목</span>\r\n                <input className=\"upload__input\" style={{ marginLeft: '10px' }} type=\"text\" id=\"title\" name=\"title\" required />\r\n            </div>\r\n            <Files style={{\r\n                marginBottom: '20px'\r\n            }} onChange={onImgChange}>\r\n                <span style={{\r\n                    border: '1px solid black',\r\n                    borderRadius: '5px',\r\n                    cursor: 'pointer'\r\n                }}>클릭해서 이미지를 업로드하세요!</span>\r\n            </Files>\r\n            {/* <img src= {url + Images} alt=\"\"/> */}\r\n            {Images.map((img, index) => {\r\n                console.log(img);\r\n                return (\r\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                        <img style={{\r\n                            display: 'inline',\r\n                            maxHeight: '70px',\r\n                            maxWidth: '70px'\r\n                        }} src={url + img} alt={url + Images} />\r\n                        <span style={{\r\n                            marginLeft: '30px'\r\n                        }}>\r\n                            {url + img}\r\n                        </span>\r\n                    </div>\r\n                );\r\n            })}\r\n            <p style={{ fontSize: '13px' }} >글자 제한 수 : <span style={{ color: 'pink' }} >{contentLength}</span> / 1000</p>\r\n            <MyBlock>\r\n                <Editor\r\n                    wrapperClassName=\"wrapper-class\"\r\n                    editorClassName=\"editor\"\r\n                    toolbarClassName=\"toolbar-class\"\r\n                    toolbar={{\r\n                        list: { inDropdown: true },\r\n                        textAlign: { inDropdown: true },\r\n                        link: { inDropdown: true },\r\n                        history: { inDropdown: false },\r\n                    }}\r\n                    placeholder=\"내용을 작성해주세요.\"\r\n                    editorState={editorState}\r\n                    onEditorStateChange={onEditorStateChange}\r\n                />\r\n            </MyBlock>\r\n            <Checkbox\r\n                onChange={(e) => {\r\n                    if (e.target.checked)\r\n                        setisChecked(true)\r\n                    else {\r\n                        setisChecked(false)\r\n                    }\r\n                }}\r\n                style={{ display: 'block' }}>\r\n                공지로 띄우기\r\n            </Checkbox>\r\n            <div style={{ display: 'flex', justifyContent: 'center', margin: '30px 0' }}>\r\n                <button className=\"upload__submitBtn\"\r\n                    onClick={() => {\r\n                        const priority = isChecked ? 1 : 0;\r\n                        const inputElm = document.querySelector('input.upload__input');\r\n                        let content = draftToHtml(convertToRaw(editorState.getCurrentContent()));\r\n                        console.log(content);\r\n                        content = content.replace(/\\n/g, '');\r\n                        console.log(content);\r\n                        /* console.log(content[10].charCodeAt(0)) */\r\n                        axios.get(`http://localhost:3001/auth/getId/?tk=${cookie.get('kth_tk')}`).then(res => {\r\n                            if (!res.data.success) {\r\n                                alert('세션이 만료되었습니다. 로그인을 다시해주세요');\r\n                                window.location.href = '/auth/login'\r\n                            } else {\r\n                                const payload = {\r\n                                    priority: priority,\r\n                                    title: inputElm.value,\r\n                                    author : res.data.id,\r\n                                    content : content\r\n                                }\r\n                                console.log(payload);\r\n                                axios.post('http://localhost:3001/notice/content', payload).then(res=>{\r\n                                    console.log(res.data);\r\n                                })\r\n                            }\r\n                        })\r\n                    }}>업로드</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoticeUpload","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Admin\\Modify\\Modify.js",[],"C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Admin\\Modify\\NoticeModify\\index.js",["205","206","207","208","209","210","211"],"import React, { useState, useEffect } from 'react'\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport styled from 'styled-components';\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport Cookies from 'universal-cookie'\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport Files from 'react-files'\r\nimport axios from 'axios'\r\nimport Checkbox from 'antd/lib/checkbox/Checkbox';\r\nvar ReactDOMServer = require('react-dom/server');\r\nvar HtmlToReactParser = require('html-to-react').Parser;\r\n\r\nconst cookie = new Cookies();\r\n\r\nconst MyBlock = styled.div`\r\n    .wrapper-class{\r\n        margin: 0 auto;\r\n    }\r\n  .editor {\r\n    height: 300px !important;\r\n    border: 1px solid #f1f1f1 !important;\r\n    padding: 5px !important;\r\n    border-radius: 2px !important;\r\n  }\r\n`;\r\n\r\n\r\nfunction NoticeUpload() {\r\n\r\n    const url = 'http://localhost:3001/';\r\n    //HTML string -> draft\r\n    const data = \"<p><strong>안녕</strong></p><p>안녕안녕</p><p><strong>안녕안녕안녕.</strong></p>\"\r\n    const blocksFromHtml = htmlToDraft(data);\r\n    const { contentBlocks, entityMap } = blocksFromHtml;\r\n    const contentState = ContentState.createFromBlockArray(contentBlocks, entityMap);\r\n\r\n\r\n    const [contentLength, setcontentLength] = useState(0);\r\n    const [isChecked, setisChecked] = useState(false);\r\n    const [counter, setcounter] = useState(0);\r\n    const [Images, setImages] = useState([]);\r\n    const [editorState, setEditorState] = useState(EditorState.createWithContent(contentState));\r\n    const [content, setcontent] = useState({});\r\n    const [id, setid] = useState(0)\r\n\r\n\r\n    const onEditorStateChange = (editorState) => {\r\n        setEditorState(editorState);\r\n        console.log(draftToHtml(convertToRaw(editorState.getCurrentContent())));\r\n        setcontentLength(draftToHtml(convertToRaw(editorState.getCurrentContent())).length);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const id = window.location.search.split('=')[1];\r\n        axios.get(`http://localhost:3001/notice/content?id=${id}`).then(res => {\r\n            if (res.data.success === false) {\r\n                alert('오류 발생');\r\n                window.location.href = '/'\r\n            } else {\r\n                console.log(res.data);\r\n                setcontent(res.data);\r\n                const blocksFromHtml = htmlToDraft(res.data.content);\r\n                const { contentBlocks, entityMap } = blocksFromHtml;\r\n                const contentState = ContentState.createFromBlockArray(contentBlocks, entityMap);\r\n                setEditorState(EditorState.createWithContent(contentState))\r\n                let inputElm = document.querySelector('input.upload__input');\r\n                inputElm.value = res.data.title;\r\n                console.log(typeof(res.data.priority));\r\n                if(res.data.priority === 1){\r\n                    const checkboxElm = document.querySelector('input[type=checkbox]');\r\n                    checkboxElm.checked = true;\r\n                    setisChecked(true)\r\n                }else{\r\n                    const checkboxElm = document.querySelector('input[type=checkbox]');\r\n                    checkboxElm.checked = false;\r\n                    setisChecked(false);\r\n                }\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    function onImgChange(e) {\r\n        const image = e[e.length - 1]\r\n        console.log(image);\r\n        const fd = new FormData();\r\n        fd.append('image', image);\r\n        axios.post('http://localhost:3001/image/upload', fd).then(res => {\r\n            if (res.data.success === false) {\r\n                alert('업로드 실패')\r\n            } else {\r\n                console.log('sex', res.data.filepath);\r\n                Images.push(res.data.filepath);\r\n                setcounter(counter + 1);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: '900px', margin: 'auto' }}>\r\n            <div className=\"upload__title\">\r\n                <span>제목</span>\r\n                <input className=\"upload__input\" style={{ marginLeft: '10px' }} /* placeholder={content.title}  */ type=\"text\" id=\"title\" name=\"title\" required />\r\n            </div>\r\n            <Files style={{\r\n                marginBottom: '20px'\r\n            }} onChange={onImgChange}>\r\n                <span style={{\r\n                    border: '1px solid black',\r\n                    borderRadius: '5px',\r\n                    cursor: 'pointer'\r\n                }}>클릭해서 이미지를 업로드하세요!</span>\r\n            </Files>\r\n            {/* <img src= {url + Images} alt=\"\"/> */}\r\n            {Images.map((img, index) => {\r\n                console.log(img);\r\n                return (\r\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                        <img style={{\r\n                            display: 'inline',\r\n                            maxHeight: '70px',\r\n                            maxWidth: '70px'\r\n                        }} src={url + img} alt={url + Images} />\r\n                        <span style={{\r\n                            marginLeft: '30px'\r\n                        }}>\r\n                            {url + img}\r\n                        </span>\r\n                    </div>\r\n                );\r\n            })}\r\n            <p style={{ fontSize: '13px' }} >글자 제한 수 : <span style={{ color: 'pink' }} >{contentLength}</span> / 1000</p>\r\n            <MyBlock>\r\n                <Editor\r\n                    wrapperClassName=\"wrapper-class\"\r\n                    editorClassName=\"editor\"\r\n                    toolbarClassName=\"toolbar-class\"\r\n                    toolbar={{\r\n                        list: { inDropdown: true },\r\n                        textAlign: { inDropdown: true },\r\n                        link: { inDropdown: true },\r\n                        history: { inDropdown: false },\r\n                    }}\r\n                    placeholder=\"내용을 작성해주세요.\"\r\n                    editorState={editorState}\r\n                    onEditorStateChange={onEditorStateChange}\r\n                />\r\n            </MyBlock>\r\n            <Checkbox\r\n                /* defaultChecked={(content.priority === 1) ? true : false} */\r\n                defaultChecked = {true}\r\n                onChange={(e) => {\r\n                    if (e.target.checked)\r\n                        setisChecked(true)\r\n                    else {\r\n                        setisChecked(false)\r\n                    }\r\n                }}\r\n                style={{ display: 'block' }}>\r\n                공지로 띄우기\r\n            </Checkbox>\r\n            <div style={{ display: 'flex', justifyContent: 'center', margin: '30px 0' }}>\r\n                <button className=\"upload__submitBtn\"\r\n                    onClick={() => {\r\n                        const priority = isChecked ? 1 : 0;\r\n                        const inputElm = document.querySelector('input.upload__input');\r\n                        let content = draftToHtml(convertToRaw(editorState.getCurrentContent()));\r\n                        console.log(content);\r\n                        content = content.replace(/\\n/g, '');\r\n                        const id = window.location.search.split('=')[1];\r\n                        const payload = {\r\n                            id : parseInt(id),\r\n                            priority: priority,\r\n                            title: inputElm.value,\r\n                            content: content\r\n                        }\r\n                        console.log(payload);\r\n                        axios.patch(`http://localhost:3001/notice/content`, payload).then(res => {\r\n                            if(res.data.success === false){\r\n                                alert('오류 발생')\r\n                                window.location.href = '/'\r\n                            }else{\r\n                                alert('수정완료되었습니다');\r\n                                window.location.href = '/info/community/notice'\r\n                            }\r\n                            /* if (!res.data.success) {\r\n                                alert('세션이 만료되었습니다. 로그인을 다시해주세요');\r\n                                window.location.href = '/auth/login'\r\n                            } else {\r\n                                const payload = {\r\n                                    priority: priority,\r\n                                    title: inputElm.value,\r\n                                    author: res.data.id,\r\n                                    content: content\r\n                                }\r\n                                console.log(payload);\r\n                                axios.post('http://localhost:3001/notice/content', payload).then(res => {\r\n                                    console.log(res.data);\r\n                                })\r\n                            } */\r\n                        })\r\n                    }}>업데이트</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoticeUpload","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\InfoPage\\sections\\CommunityPage\\VideoContent\\VideoContent.js",[],"C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Admin\\Upload\\VideoUpload\\VideoUpload.js",["212","213","214","215","216"],"import React, { useState } from 'react'\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport styled from 'styled-components';\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport Cookies from 'universal-cookie'\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport Files from 'react-files'\r\nimport axios from 'axios'\r\nimport Checkbox from 'antd/lib/checkbox/Checkbox';\r\nvar ReactDOMServer = require('react-dom/server');\r\nvar HtmlToReactParser = require('html-to-react').Parser;\r\n\r\nconst cookie = new Cookies();\r\n\r\nconst MyBlock = styled.div`\r\n    .wrapper-class{\r\n        margin: 0 auto;\r\n    }\r\n  .editor {\r\n    height: 300px !important;\r\n    border: 1px solid #f1f1f1 !important;\r\n    padding: 5px !important;\r\n    border-radius: 2px !important;\r\n  }\r\n`;\r\n\r\n\r\nfunction VideoUpload() {\r\n\r\n    const url = 'http://localhost:3001/';\r\n\r\n    const [contentLength, setcontentLength] = useState(0);\r\n    const [isChecked, setisChecked] = useState(false);\r\n    const [counter, setcounter] = useState(0);\r\n    const [Images, setImages] = useState([]);\r\n    const [editorState, setEditorState] = useState(EditorState.createEmpty());\r\n\r\n\r\n    const onEditorStateChange = (editorState) => {\r\n        setEditorState(editorState);\r\n        console.log(draftToHtml(convertToRaw(editorState.getCurrentContent())));\r\n        setcontentLength(draftToHtml(convertToRaw(editorState.getCurrentContent())).length);\r\n    };\r\n\r\n    function onImgChange(e) {\r\n        const image = e[e.length - 1]\r\n        console.log(image);\r\n        const fd = new FormData();\r\n        fd.append('image', image);\r\n        axios.post('http://localhost:3001/image/upload', fd).then(res => {\r\n            if (res.data.success === false) {\r\n                alert('업로드 실패')\r\n            } else {\r\n                console.log('sex', res.data.filepath);\r\n                Images.push(res.data.filepath);\r\n                setcounter(counter + 1);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: '900px', margin: 'auto' }}>\r\n            <div className=\"upload__title\">\r\n                <span>제목</span>\r\n                <input className=\"upload__input\" style={{ marginLeft: '10px' }} type=\"text\" id=\"title\" name=\"title\" required />\r\n            </div>\r\n            <Files style={{\r\n                marginBottom: '20px'\r\n            }} onChange={onImgChange}>\r\n                <span style={{\r\n                    border: '1px solid black',\r\n                    borderRadius: '5px',\r\n                    cursor: 'pointer'\r\n                }}>클릭해서 이미지를 업로드하세요!</span>\r\n            </Files>\r\n            {/* <img src= {url + Images} alt=\"\"/> */}\r\n            {Images.map((img, index) => {\r\n                console.log(img);\r\n                return (\r\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                        <img style={{\r\n                            display: 'inline',\r\n                            maxHeight: '70px',\r\n                            maxWidth: '70px'\r\n                        }} src={url + img} alt={url + Images} />\r\n                        <span style={{\r\n                            marginLeft: '30px'\r\n                        }}>\r\n                            {url + img}\r\n                        </span>\r\n                    </div>\r\n                );\r\n            })}\r\n            <p style={{ fontSize: '13px' }} >글자 제한 수 : <span style={{ color: 'pink' }} >{contentLength}</span> / 1000</p>\r\n            <MyBlock>\r\n                <Editor\r\n                    wrapperClassName=\"wrapper-class\"\r\n                    editorClassName=\"editor\"\r\n                    toolbarClassName=\"toolbar-class\"\r\n                    toolbar={{\r\n                        list: { inDropdown: true },\r\n                        textAlign: { inDropdown: true },\r\n                        link: { inDropdown: true },\r\n                        history: { inDropdown: false },\r\n                    }}\r\n                    placeholder=\"내용을 작성해주세요.\"\r\n                    editorState={editorState}\r\n                    onEditorStateChange={onEditorStateChange}\r\n                />\r\n            </MyBlock>\r\n            <Checkbox\r\n                onChange={(e) => {\r\n                    if (e.target.checked)\r\n                        setisChecked(true)\r\n                    else {\r\n                        setisChecked(false)\r\n                    }\r\n                }}\r\n                style={{ display: 'block' }}>\r\n                공지로 띄우기\r\n            </Checkbox>\r\n            <div style={{ display: 'flex', justifyContent: 'center', margin: '30px 0' }}>\r\n                <button className=\"upload__submitBtn\"\r\n                    onClick={() => {\r\n                        const priority = isChecked ? 1 : 0;\r\n                        const inputElm = document.querySelector('input.upload__input');\r\n                        let content = draftToHtml(convertToRaw(editorState.getCurrentContent()));\r\n                        console.log(content);\r\n                        content = content.replace(/\\n/g, '');\r\n                        console.log(content);\r\n                        /* console.log(content[10].charCodeAt(0)) */\r\n                        axios.get(`http://localhost:3001/auth/getId/?tk=${cookie.get('kth_tk')}`).then(res => {\r\n                            if (!res.data.success) {\r\n                                alert('세션이 만료되었습니다. 로그인을 다시해주세요');\r\n                                window.location.href = '/auth/login'\r\n                            } else {\r\n                                const payload = {\r\n                                    priority: priority,\r\n                                    title: inputElm.value,\r\n                                    author : res.data.id,\r\n                                    content : content\r\n                                }\r\n                                console.log(payload);\r\n                                axios.post('http://localhost:3001/video/content', payload).then(res=>{\r\n                                    console.log(res.data);\r\n                                })\r\n                            }\r\n                        })\r\n                    }}>업로드</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoUpload","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Admin\\Modify\\VideoModify\\index.js",["217","218","219","220","221","222","223"],"import React, { useState, useEffect } from 'react'\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport styled from 'styled-components';\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport Cookies from 'universal-cookie'\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport Files from 'react-files'\r\nimport axios from 'axios'\r\nimport Checkbox from 'antd/lib/checkbox/Checkbox';\r\nvar ReactDOMServer = require('react-dom/server');\r\nvar HtmlToReactParser = require('html-to-react').Parser;\r\n\r\nconst cookie = new Cookies();\r\n\r\nconst MyBlock = styled.div`\r\n    .wrapper-class{\r\n        margin: 0 auto;\r\n    }\r\n  .editor {\r\n    height: 300px !important;\r\n    border: 1px solid #f1f1f1 !important;\r\n    padding: 5px !important;\r\n    border-radius: 2px !important;\r\n  }\r\n`;\r\n\r\n\r\n\r\nfunction VideoUpload() {\r\n\r\n    const url = 'http://localhost:3001/';\r\n    //HTML string -> draft\r\n    const data = \"<p><strong>안녕</strong></p><p>안녕안녕</p><p><strong>안녕안녕안녕.</strong></p>\"\r\n    const blocksFromHtml = htmlToDraft(data);\r\n    const { contentBlocks, entityMap } = blocksFromHtml;\r\n    const contentState = ContentState.createFromBlockArray(contentBlocks, entityMap);\r\n\r\n\r\n    const [contentLength, setcontentLength] = useState(0);\r\n    const [isChecked, setisChecked] = useState(false);\r\n    const [counter, setcounter] = useState(0);\r\n    const [Images, setImages] = useState([]);\r\n    const [editorState, setEditorState] = useState(EditorState.createWithContent(contentState));\r\n    const [content, setcontent] = useState({});\r\n    const [id, setid] = useState(0)\r\n\r\n\r\n    const onEditorStateChange = (editorState) => {\r\n        setEditorState(editorState);\r\n        console.log(draftToHtml(convertToRaw(editorState.getCurrentContent())));\r\n        setcontentLength(draftToHtml(convertToRaw(editorState.getCurrentContent())).length);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const id = window.location.search.split('=')[1];\r\n        axios.get(`http://localhost:3001/video/content?id=${id}`).then(res => {\r\n            if (res.data.success === false) {\r\n                alert('오류 발생');\r\n                window.location.href = '/'\r\n            } else {\r\n                console.log(res.data);\r\n                setcontent(res.data);\r\n                const blocksFromHtml = htmlToDraft(res.data.content);\r\n                const { contentBlocks, entityMap } = blocksFromHtml;\r\n                const contentState = ContentState.createFromBlockArray(contentBlocks, entityMap);\r\n                setEditorState(EditorState.createWithContent(contentState))\r\n                let inputElm = document.querySelector('input.upload__input');\r\n                inputElm.value = res.data.title;\r\n                console.log(typeof(res.data.priority));\r\n                if(res.data.priority === 1){\r\n                    const checkboxElm = document.querySelector('input[type=checkbox]');\r\n                    checkboxElm.checked = true;\r\n                    setisChecked(true)\r\n                }else{\r\n                    const checkboxElm = document.querySelector('input[type=checkbox]');\r\n                    checkboxElm.checked = false;\r\n                    setisChecked(false);\r\n                }\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    function onImgChange(e) {\r\n        const image = e[e.length - 1]\r\n        console.log(image);\r\n        const fd = new FormData();\r\n        fd.append('image', image);\r\n        axios.post('http://localhost:3001/image/upload', fd).then(res => {\r\n            if (res.data.success === false) {\r\n                alert('업로드 실패')\r\n            } else {\r\n                console.log('sex', res.data.filepath);\r\n                Images.push(res.data.filepath);\r\n                setcounter(counter + 1);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: '900px', margin: 'auto' }}>\r\n            <div className=\"upload__title\">\r\n                <span>제목</span>\r\n                <input className=\"upload__input\" style={{ marginLeft: '10px' }} /* placeholder={content.title}  */ type=\"text\" id=\"title\" name=\"title\" required />\r\n            </div>\r\n            <Files style={{\r\n                marginBottom: '20px'\r\n            }} onChange={onImgChange}>\r\n                <span style={{\r\n                    border: '1px solid black',\r\n                    borderRadius: '5px',\r\n                    cursor: 'pointer'\r\n                }}>클릭해서 이미지를 업로드하세요!</span>\r\n            </Files>\r\n            {/* <img src= {url + Images} alt=\"\"/> */}\r\n            {Images.map((img, index) => {\r\n                console.log(img);\r\n                return (\r\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                        <img style={{\r\n                            display: 'inline',\r\n                            maxHeight: '70px',\r\n                            maxWidth: '70px'\r\n                        }} src={url + img} alt={url + Images} />\r\n                        <span style={{\r\n                            marginLeft: '30px'\r\n                        }}>\r\n                            {url + img}\r\n                        </span>\r\n                    </div>\r\n                );\r\n            })}\r\n            <p style={{ fontSize: '13px' }} >글자 제한 수 : <span style={{ color: 'pink' }} >{contentLength}</span> / 1000</p>\r\n            <MyBlock>\r\n                <Editor\r\n                    wrapperClassName=\"wrapper-class\"\r\n                    editorClassName=\"editor\"\r\n                    toolbarClassName=\"toolbar-class\"\r\n                    toolbar={{\r\n                        list: { inDropdown: true },\r\n                        textAlign: { inDropdown: true },\r\n                        link: { inDropdown: true },\r\n                        history: { inDropdown: false },\r\n                    }}\r\n                    placeholder=\"내용을 작성해주세요.\"\r\n                    editorState={editorState}\r\n                    onEditorStateChange={onEditorStateChange}\r\n                />\r\n            </MyBlock>\r\n            <Checkbox\r\n                /* defaultChecked={(content.priority === 1) ? true : false} */\r\n                defaultChecked = {true}\r\n                onChange={(e) => {\r\n                    if (e.target.checked)\r\n                        setisChecked(true)\r\n                    else {\r\n                        setisChecked(false)\r\n                    }\r\n                }}\r\n                style={{ display: 'block' }}>\r\n                공지로 띄우기\r\n            </Checkbox>\r\n            <div style={{ display: 'flex', justifyContent: 'center', margin: '30px 0' }}>\r\n                <button className=\"upload__submitBtn\"\r\n                    onClick={() => {\r\n                        const priority = isChecked ? 1 : 0;\r\n                        const inputElm = document.querySelector('input.upload__input');\r\n                        let content = draftToHtml(convertToRaw(editorState.getCurrentContent()));\r\n                        console.log(content);\r\n                        content = content.replace(/\\n/g, '');\r\n                        const id = window.location.search.split('=')[1];\r\n                        const payload = {\r\n                            id : parseInt(id),\r\n                            priority: priority,\r\n                            title: inputElm.value,\r\n                            content: content\r\n                        }\r\n                        console.log(payload);\r\n                        axios.patch(`http://localhost:3001/video/content`, payload).then(res => {\r\n                            if(res.data.success === false){\r\n                                alert('오류 발생')\r\n                                window.location.href = '/'\r\n                            }else{\r\n                                alert('수정완료되었습니다');\r\n                                window.location.href = '/info/community/video'\r\n                            }\r\n                            /* if (!res.data.success) {\r\n                                alert('세션이 만료되었습니다. 로그인을 다시해주세요');\r\n                                window.location.href = '/auth/login'\r\n                            } else {\r\n                                const payload = {\r\n                                    priority: priority,\r\n                                    title: inputElm.value,\r\n                                    author: res.data.id,\r\n                                    content: content\r\n                                }\r\n                                console.log(payload);\r\n                                axios.post('http://localhost:3001/video/content', payload).then(res => {\r\n                                    console.log(res.data);\r\n                                })\r\n                            } */\r\n                        })\r\n                    }}>업데이트</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoUpload","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Admin\\Upload\\UnivInfoUpload\\index.js",["224","225","226","227","228"],"import React, { useState } from 'react'\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport styled from 'styled-components';\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport Cookies from 'universal-cookie'\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport Files from 'react-files'\r\nimport axios from 'axios'\r\nimport Checkbox from 'antd/lib/checkbox/Checkbox';\r\nvar ReactDOMServer = require('react-dom/server');\r\nvar HtmlToReactParser = require('html-to-react').Parser;\r\n\r\nconst cookie = new Cookies();\r\n\r\nconst MyBlock = styled.div`\r\n    .wrapper-class{\r\n        margin: 0 auto;\r\n    }\r\n  .editor {\r\n    height: 300px !important;\r\n    border: 1px solid #f1f1f1 !important;\r\n    padding: 5px !important;\r\n    border-radius: 2px !important;\r\n  }\r\n`;\r\n\r\n\r\nfunction UnivInfoUpload() {\r\n\r\n    const url = 'http://localhost:3001/';\r\n\r\n    const [contentLength, setcontentLength] = useState(0);\r\n    const [isChecked, setisChecked] = useState(false);\r\n    const [counter, setcounter] = useState(0);\r\n    const [Images, setImages] = useState([]);\r\n    const [editorState, setEditorState] = useState(EditorState.createEmpty());\r\n\r\n\r\n    const onEditorStateChange = (editorState) => {\r\n        setEditorState(editorState);\r\n        console.log(draftToHtml(convertToRaw(editorState.getCurrentContent())));\r\n        setcontentLength(draftToHtml(convertToRaw(editorState.getCurrentContent())).length);\r\n    };\r\n\r\n    function onImgChange(e) {\r\n        const image = e[e.length - 1]\r\n        console.log(image);\r\n        const fd = new FormData();\r\n        fd.append('image', image);\r\n        axios.post('http://localhost:3001/image/upload', fd).then(res => {\r\n            if (res.data.success === false) {\r\n                alert('업로드 실패')\r\n            } else {\r\n                console.log('sex', res.data.filepath);\r\n                Images.push(res.data.filepath);\r\n                setcounter(counter + 1);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: '900px', margin: 'auto' }}>\r\n            <div className=\"upload__title\">\r\n                <span>제목</span>\r\n                <input className=\"upload__input\" style={{ marginLeft: '10px' }} type=\"text\" id=\"title\" name=\"title\" required />\r\n            </div>\r\n            <Files style={{\r\n                marginBottom: '20px'\r\n            }} onChange={onImgChange}>\r\n                <span style={{\r\n                    border: '1px solid black',\r\n                    borderRadius: '5px',\r\n                    cursor: 'pointer'\r\n                }}>클릭해서 이미지를 업로드하세요!</span>\r\n            </Files>\r\n            {/* <img src= {url + Images} alt=\"\"/> */}\r\n            {Images.map((img, index) => {\r\n                console.log(img);\r\n                return (\r\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                        <img style={{\r\n                            display: 'inline',\r\n                            maxHeight: '70px',\r\n                            maxWidth: '70px'\r\n                        }} src={url + img} alt={url + Images} />\r\n                        <span style={{\r\n                            marginLeft: '30px'\r\n                        }}>\r\n                            {url + img}\r\n                        </span>\r\n                    </div>\r\n                );\r\n            })}\r\n            <p style={{ fontSize: '13px' }} >글자 제한 수 : <span style={{ color: 'pink' }} >{contentLength}</span> / 1000</p>\r\n            <MyBlock>\r\n                <Editor\r\n                    wrapperClassName=\"wrapper-class\"\r\n                    editorClassName=\"editor\"\r\n                    toolbarClassName=\"toolbar-class\"\r\n                    toolbar={{\r\n                        list: { inDropdown: true },\r\n                        textAlign: { inDropdown: true },\r\n                        link: { inDropdown: true },\r\n                        history: { inDropdown: false },\r\n                    }}\r\n                    placeholder=\"내용을 작성해주세요.\"\r\n                    editorState={editorState}\r\n                    onEditorStateChange={onEditorStateChange}\r\n                />\r\n            </MyBlock>\r\n            <Checkbox\r\n                onChange={(e) => {\r\n                    if (e.target.checked)\r\n                        setisChecked(true)\r\n                    else {\r\n                        setisChecked(false)\r\n                    }\r\n                }}\r\n                style={{ display: 'block' }}>\r\n                공지로 띄우기\r\n            </Checkbox>\r\n            <div style={{ display: 'flex', justifyContent: 'center', margin: '30px 0' }}>\r\n                <button className=\"upload__submitBtn\"\r\n                    onClick={() => {\r\n                        const priority = isChecked ? 1 : 0;\r\n                        const inputElm = document.querySelector('input.upload__input');\r\n                        let content = draftToHtml(convertToRaw(editorState.getCurrentContent()));\r\n                        console.log(content);\r\n                        content = content.replace(/\\n/g, '');\r\n                        console.log(content);\r\n                        /* console.log(content[10].charCodeAt(0)) */\r\n                        axios.get(`http://localhost:3001/auth/getId/?tk=${cookie.get('kth_tk')}`).then(res => {\r\n                            if (!res.data.success) {\r\n                                alert('세션이 만료되었습니다. 로그인을 다시해주세요');\r\n                                window.location.href = '/auth/login'\r\n                            } else {\r\n                                const payload = {\r\n                                    priority: priority,\r\n                                    title: inputElm.value,\r\n                                    author : res.data.id,\r\n                                    content : content\r\n                                }\r\n                                console.log(payload);\r\n                                axios.post('http://localhost:3001/univInfo/content', payload).then(res=>{\r\n                                    console.log(res.data);\r\n                                })\r\n                            }\r\n                        })\r\n                    }}>업로드</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UnivInfoUpload","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\InfoPage\\sections\\CommunityPage\\UnivContent\\UnivContent.js",[],"C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Admin\\Modify\\UnivInfoModify\\index.js",["229","230","231","232","233","234","235"],"import React, { useState, useEffect } from 'react'\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport styled from 'styled-components';\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport Cookies from 'universal-cookie'\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport Files from 'react-files'\r\nimport axios from 'axios'\r\nimport Checkbox from 'antd/lib/checkbox/Checkbox';\r\nvar ReactDOMServer = require('react-dom/server');\r\nvar HtmlToReactParser = require('html-to-react').Parser;\r\n\r\nconst cookie = new Cookies();\r\n\r\nconst MyBlock = styled.div`\r\n    .wrapper-class{\r\n        margin: 0 auto;\r\n    }\r\n  .editor {\r\n    height: 300px !important;\r\n    border: 1px solid #f1f1f1 !important;\r\n    padding: 5px !important;\r\n    border-radius: 2px !important;\r\n  }\r\n`;\r\n\r\n\r\nfunction UnivInofModify() {\r\n\r\n    const url = 'http://localhost:3001/';\r\n    //HTML string -> draft\r\n    const data = \"<p><strong>안녕</strong></p><p>안녕안녕</p><p><strong>안녕안녕안녕.</strong></p>\"\r\n    const blocksFromHtml = htmlToDraft(data);\r\n    const { contentBlocks, entityMap } = blocksFromHtml;\r\n    const contentState = ContentState.createFromBlockArray(contentBlocks, entityMap);\r\n\r\n\r\n    const [contentLength, setcontentLength] = useState(0);\r\n    const [isChecked, setisChecked] = useState(false);\r\n    const [counter, setcounter] = useState(0);\r\n    const [Images, setImages] = useState([]);\r\n    const [editorState, setEditorState] = useState(EditorState.createWithContent(contentState));\r\n    const [content, setcontent] = useState({});\r\n    const [id, setid] = useState(0)\r\n\r\n\r\n    const onEditorStateChange = (editorState) => {\r\n        setEditorState(editorState);\r\n        console.log(draftToHtml(convertToRaw(editorState.getCurrentContent())));\r\n        setcontentLength(draftToHtml(convertToRaw(editorState.getCurrentContent())).length);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const id = window.location.search.split('=')[1];\r\n        axios.get(`http://localhost:3001/univInfo/content?id=${id}`).then(res => {\r\n            console.log(res.data);\r\n            if (res.data.success === false) {\r\n                alert('오류 발생');\r\n                window.location.href = '/'\r\n            } else {\r\n                console.log(res.data);\r\n                setcontent(res.data);\r\n                const blocksFromHtml = htmlToDraft((res.data.content ? res.data.content : \"\"));\r\n                const { contentBlocks, entityMap } = blocksFromHtml;\r\n                const contentState = ContentState.createFromBlockArray(contentBlocks, entityMap);\r\n                setEditorState(EditorState.createWithContent(contentState))\r\n                let inputElm = document.querySelector('input.upload__input');\r\n                inputElm.value = res.data.title;\r\n                console.log(typeof(res.data.priority));\r\n                if(res.data.priority === 1){\r\n                    console.log('원래 1');\r\n                    const checkboxElm = document.querySelector('input[type=checkbox]');\r\n                    checkboxElm.checked = true;\r\n                    setisChecked(false);\r\n                }else{\r\n                    console.log('원래 0');\r\n                    const checkboxElm = document.querySelector('input[type=checkbox]');\r\n                    checkboxElm.checked = false;\r\n                    setisChecked(false);\r\n                }\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    function onImgChange(e) {\r\n        const image = e[e.length - 1]\r\n        console.log(image);\r\n        const fd = new FormData();\r\n        fd.append('image', image);\r\n        axios.post('http://localhost:3001/image/upload', fd).then(res => {\r\n            if (res.data.success === false) {\r\n                alert('업로드 실패')\r\n            } else {\r\n                console.log('sex', res.data.filepath);\r\n                Images.push(res.data.filepath);\r\n                setcounter(counter + 1);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: '900px', margin: 'auto' }}>\r\n            <div className=\"upload__title\">\r\n                <span>제목</span>\r\n                <input className=\"upload__input\" style={{ marginLeft: '10px' }} /* placeholder={content.title}  */ type=\"text\" id=\"title\" name=\"title\" required />\r\n            </div>\r\n            <Files style={{\r\n                marginBottom: '20px'\r\n            }} onChange={onImgChange}>\r\n                <span style={{\r\n                    border: '1px solid black',\r\n                    borderRadius: '5px',\r\n                    cursor: 'pointer'\r\n                }}>클릭해서 이미지를 업로드하세요!</span>\r\n            </Files>\r\n            {/* <img src= {url + Images} alt=\"\"/> */}\r\n            {Images.map((img, index) => {\r\n                console.log(img);\r\n                return (\r\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                        <img style={{\r\n                            display: 'inline',\r\n                            maxHeight: '70px',\r\n                            maxWidth: '70px'\r\n                        }} src={url + img} alt={url + Images} />\r\n                        <span style={{\r\n                            marginLeft: '30px'\r\n                        }}>\r\n                            {url + img}\r\n                        </span>\r\n                    </div>\r\n                );\r\n            })}\r\n            <p style={{ fontSize: '13px' }} >글자 제한 수 : <span style={{ color: 'pink' }} >{contentLength}</span> / 1000</p>\r\n            <MyBlock>\r\n                <Editor\r\n                    wrapperClassName=\"wrapper-class\"\r\n                    editorClassName=\"editor\"\r\n                    toolbarClassName=\"toolbar-class\"\r\n                    toolbar={{\r\n                        list: { inDropdown: true },\r\n                        textAlign: { inDropdown: true },\r\n                        link: { inDropdown: true },\r\n                        history: { inDropdown: false },\r\n                    }}\r\n                    placeholder=\"내용을 작성해주세요.\"\r\n                    editorState={editorState}\r\n                    onEditorStateChange={onEditorStateChange}\r\n                />\r\n            </MyBlock>\r\n        <button onClick = {\r\n            ()=>{\r\n                console.log(isChecked);\r\n            }\r\n        }>click me!!!!!!!!!!!!!!</button>\r\n            <Checkbox id = \"ischecked\"\r\n                /* defaultChecked={(content.priority === 1) ? true : false} */\r\n                defaultChecked = {isChecked}\r\n                onChange={(e) => {\r\n                    if (e.target.checked)\r\n                        setisChecked(true)\r\n                    else {\r\n                        setisChecked(false)\r\n                    }\r\n                }}\r\n                style={{ display: 'block' }}>\r\n                공지로 띄우기\r\n            </Checkbox>\r\n            <div style={{ display: 'flex', justifyContent: 'center', margin: '30px 0' }}>\r\n                <button className=\"upload__submitBtn\"\r\n                    onClick={() => {\r\n                        const priority = isChecked ? 1 : 0;\r\n                        const inputElm = document.querySelector('input.upload__input');\r\n                        let content = draftToHtml(convertToRaw(editorState.getCurrentContent()));\r\n                        console.log(content);\r\n                        content = content.replace(/\\n/g, '');\r\n                        const id = window.location.search.split('=')[1];\r\n                        const payload = {\r\n                            id : parseInt(id),\r\n                            priority: priority,\r\n                            title: inputElm.value,\r\n                            content: content\r\n                        }\r\n                        console.log(payload);\r\n                        axios.patch(`http://localhost:3001/univInfo/content`, payload).then(res => {\r\n                            if(res.data.success === false){\r\n                                alert('오류 발생')\r\n                                window.location.href = '/'\r\n                            }else{\r\n                                alert('수정완료되었습니다');\r\n                                window.location.href = '/info/community/univInfo'\r\n                            }\r\n                        })\r\n                    }}>업데이트</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UnivInofModify","C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Admin\\Upload\\ScheduleUpload\\index.js",["236","237","238","239","240","241","242","243","244"],"C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\InfoPage\\sections\\LecturePage\\ScheduleContent\\index.js",[],"C:\\Users\\woasi\\Desktop\\겨울방학\\kth\\src\\components\\Admin\\Modify\\ScheduleModify\\index.js",["245","246","247","248","249","250","251"],{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","severity":1,"message":"257","line":18,"column":8,"nodeType":"258","endLine":18,"endColumn":10,"suggestions":"259"},{"ruleId":"260","severity":1,"message":"261","line":1,"column":17,"nodeType":"262","messageId":"263","endLine":1,"endColumn":26},{"ruleId":"260","severity":1,"message":"264","line":12,"column":12,"nodeType":"262","messageId":"263","endLine":12,"endColumn":24},{"ruleId":"260","severity":1,"message":"261","line":1,"column":17,"nodeType":"262","messageId":"263","endLine":1,"endColumn":26},{"ruleId":"260","severity":1,"message":"264","line":13,"column":12,"nodeType":"262","messageId":"263","endLine":13,"endColumn":24},{"ruleId":"260","severity":1,"message":"265","line":18,"column":12,"nodeType":"262","messageId":"263","endLine":18,"endColumn":19},{"ruleId":"260","severity":1,"message":"266","line":18,"column":21,"nodeType":"262","messageId":"263","endLine":18,"endColumn":31},{"ruleId":"260","severity":1,"message":"264","line":12,"column":12,"nodeType":"262","messageId":"263","endLine":12,"endColumn":24},{"ruleId":"260","severity":1,"message":"265","line":17,"column":12,"nodeType":"262","messageId":"263","endLine":17,"endColumn":19},{"ruleId":"260","severity":1,"message":"266","line":17,"column":21,"nodeType":"262","messageId":"263","endLine":17,"endColumn":31},{"ruleId":"260","severity":1,"message":"264","line":12,"column":12,"nodeType":"262","messageId":"263","endLine":12,"endColumn":24},{"ruleId":"260","severity":1,"message":"265","line":17,"column":12,"nodeType":"262","messageId":"263","endLine":17,"endColumn":19},{"ruleId":"260","severity":1,"message":"266","line":17,"column":21,"nodeType":"262","messageId":"263","endLine":17,"endColumn":31},{"ruleId":"267","severity":1,"message":"268","line":5,"column":1,"nodeType":"269","endLine":12,"endColumn":2},{"ruleId":"260","severity":1,"message":"270","line":5,"column":37,"nodeType":"262","messageId":"263","endLine":5,"endColumn":49},{"ruleId":"260","severity":1,"message":"271","line":8,"column":8,"nodeType":"262","messageId":"263","endLine":8,"endColumn":19},{"ruleId":"260","severity":1,"message":"272","line":13,"column":5,"nodeType":"262","messageId":"263","endLine":13,"endColumn":19},{"ruleId":"260","severity":1,"message":"273","line":14,"column":5,"nodeType":"262","messageId":"263","endLine":14,"endColumn":22},{"ruleId":"260","severity":1,"message":"274","line":38,"column":20,"nodeType":"262","messageId":"263","endLine":38,"endColumn":29},{"ruleId":"260","severity":1,"message":"272","line":12,"column":5,"nodeType":"262","messageId":"263","endLine":12,"endColumn":19},{"ruleId":"260","severity":1,"message":"273","line":13,"column":5,"nodeType":"262","messageId":"263","endLine":13,"endColumn":22},{"ruleId":"260","severity":1,"message":"275","line":15,"column":7,"nodeType":"262","messageId":"263","endLine":15,"endColumn":13},{"ruleId":"260","severity":1,"message":"274","line":43,"column":20,"nodeType":"262","messageId":"263","endLine":43,"endColumn":29},{"ruleId":"260","severity":1,"message":"276","line":45,"column":12,"nodeType":"262","messageId":"263","endLine":45,"endColumn":19},{"ruleId":"260","severity":1,"message":"277","line":46,"column":12,"nodeType":"262","messageId":"263","endLine":46,"endColumn":14},{"ruleId":"260","severity":1,"message":"278","line":46,"column":16,"nodeType":"262","messageId":"263","endLine":46,"endColumn":21},{"ruleId":"260","severity":1,"message":"270","line":5,"column":37,"nodeType":"262","messageId":"263","endLine":5,"endColumn":49},{"ruleId":"260","severity":1,"message":"271","line":8,"column":8,"nodeType":"262","messageId":"263","endLine":8,"endColumn":19},{"ruleId":"260","severity":1,"message":"272","line":12,"column":5,"nodeType":"262","messageId":"263","endLine":12,"endColumn":19},{"ruleId":"260","severity":1,"message":"273","line":13,"column":5,"nodeType":"262","messageId":"263","endLine":13,"endColumn":22},{"ruleId":"260","severity":1,"message":"274","line":37,"column":20,"nodeType":"262","messageId":"263","endLine":37,"endColumn":29},{"ruleId":"260","severity":1,"message":"272","line":12,"column":5,"nodeType":"262","messageId":"263","endLine":12,"endColumn":19},{"ruleId":"260","severity":1,"message":"273","line":13,"column":5,"nodeType":"262","messageId":"263","endLine":13,"endColumn":22},{"ruleId":"260","severity":1,"message":"275","line":15,"column":7,"nodeType":"262","messageId":"263","endLine":15,"endColumn":13},{"ruleId":"260","severity":1,"message":"274","line":44,"column":20,"nodeType":"262","messageId":"263","endLine":44,"endColumn":29},{"ruleId":"260","severity":1,"message":"276","line":46,"column":12,"nodeType":"262","messageId":"263","endLine":46,"endColumn":19},{"ruleId":"260","severity":1,"message":"277","line":47,"column":12,"nodeType":"262","messageId":"263","endLine":47,"endColumn":14},{"ruleId":"260","severity":1,"message":"278","line":47,"column":16,"nodeType":"262","messageId":"263","endLine":47,"endColumn":21},{"ruleId":"260","severity":1,"message":"270","line":5,"column":37,"nodeType":"262","messageId":"263","endLine":5,"endColumn":49},{"ruleId":"260","severity":1,"message":"271","line":8,"column":8,"nodeType":"262","messageId":"263","endLine":8,"endColumn":19},{"ruleId":"260","severity":1,"message":"272","line":12,"column":5,"nodeType":"262","messageId":"263","endLine":12,"endColumn":19},{"ruleId":"260","severity":1,"message":"273","line":13,"column":5,"nodeType":"262","messageId":"263","endLine":13,"endColumn":22},{"ruleId":"260","severity":1,"message":"274","line":37,"column":20,"nodeType":"262","messageId":"263","endLine":37,"endColumn":29},{"ruleId":"260","severity":1,"message":"272","line":12,"column":5,"nodeType":"262","messageId":"263","endLine":12,"endColumn":19},{"ruleId":"260","severity":1,"message":"273","line":13,"column":5,"nodeType":"262","messageId":"263","endLine":13,"endColumn":22},{"ruleId":"260","severity":1,"message":"275","line":15,"column":7,"nodeType":"262","messageId":"263","endLine":15,"endColumn":13},{"ruleId":"260","severity":1,"message":"274","line":43,"column":20,"nodeType":"262","messageId":"263","endLine":43,"endColumn":29},{"ruleId":"260","severity":1,"message":"276","line":45,"column":12,"nodeType":"262","messageId":"263","endLine":45,"endColumn":19},{"ruleId":"260","severity":1,"message":"277","line":46,"column":12,"nodeType":"262","messageId":"263","endLine":46,"endColumn":14},{"ruleId":"260","severity":1,"message":"278","line":46,"column":16,"nodeType":"262","messageId":"263","endLine":46,"endColumn":21},{"ruleId":"260","severity":1,"message":"270","line":5,"column":37,"nodeType":"262","messageId":"263","endLine":5,"endColumn":49},{"ruleId":"260","severity":1,"message":"271","line":8,"column":8,"nodeType":"262","messageId":"263","endLine":8,"endColumn":19},{"ruleId":"260","severity":1,"message":"272","line":12,"column":5,"nodeType":"262","messageId":"263","endLine":12,"endColumn":19},{"ruleId":"260","severity":1,"message":"273","line":13,"column":5,"nodeType":"262","messageId":"263","endLine":13,"endColumn":22},{"ruleId":"260","severity":1,"message":"275","line":15,"column":7,"nodeType":"262","messageId":"263","endLine":15,"endColumn":13},{"ruleId":"260","severity":1,"message":"274","line":43,"column":20,"nodeType":"262","messageId":"263","endLine":43,"endColumn":29},{"ruleId":"260","severity":1,"message":"279","line":133,"column":31,"nodeType":"262","messageId":"263","endLine":133,"endColumn":39},{"ruleId":"260","severity":1,"message":"280","line":134,"column":31,"nodeType":"262","messageId":"263","endLine":134,"endColumn":39},{"ruleId":"260","severity":1,"message":"281","line":139,"column":31,"nodeType":"262","messageId":"263","endLine":139,"endColumn":36},{"ruleId":"260","severity":1,"message":"272","line":12,"column":5,"nodeType":"262","messageId":"263","endLine":12,"endColumn":19},{"ruleId":"260","severity":1,"message":"273","line":13,"column":5,"nodeType":"262","messageId":"263","endLine":13,"endColumn":22},{"ruleId":"260","severity":1,"message":"275","line":15,"column":7,"nodeType":"262","messageId":"263","endLine":15,"endColumn":13},{"ruleId":"260","severity":1,"message":"274","line":43,"column":20,"nodeType":"262","messageId":"263","endLine":43,"endColumn":29},{"ruleId":"260","severity":1,"message":"276","line":45,"column":12,"nodeType":"262","messageId":"263","endLine":45,"endColumn":19},{"ruleId":"260","severity":1,"message":"277","line":46,"column":12,"nodeType":"262","messageId":"263","endLine":46,"endColumn":14},{"ruleId":"260","severity":1,"message":"278","line":46,"column":16,"nodeType":"262","messageId":"263","endLine":46,"endColumn":21},"no-native-reassign",["282"],"no-negated-in-lhs",["283"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isAdmin' and 'isAuth'. Either include them or remove the dependency array.","ArrayExpression",["284"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'contentCount' is assigned a value but never used.","'refresh' is assigned a value but never used.","'setrefresh' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'ContentState' is defined but never used.","'htmlToDraft' is defined but never used.","'ReactDOMServer' is assigned a value but never used.","'HtmlToReactParser' is assigned a value but never used.","'setImages' is assigned a value but never used.","'cookie' is assigned a value but never used.","'content' is assigned a value but never used.","'id' is assigned a value but never used.","'setid' is assigned a value but never used.","'priority' is assigned a value but never used.","'inputElm' is assigned a value but never used.","'grade' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"285","fix":"286"},"Update the dependencies array to be: [isAdmin, isAuth]",{"range":"287","text":"288"},[563,565],"[isAdmin, isAuth]"]